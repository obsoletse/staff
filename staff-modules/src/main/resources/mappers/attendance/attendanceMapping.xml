<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.linbin.modules.attendance.dao.AttendanceDao">
    <resultMap id="baseMap" type="com.linbin.modules.attendance.entity.Attendance">
        <id property="id" column="id"/>
        <result property="username" column="username"/>
        <result property="realName" column="real_name"/>
        <result property="clockTime" column="clock_time"/>
        <result property="type" column="type"/>
        <result property="status" column="status"/>
        <result property="isApproval" column="is_approval"/>
        <result property="isReplace" column="is_replace"/>
    </resultMap>


    <select id="getMyAttendanceList" resultMap="baseMap">
        select * from attendance
        <where>
            username = #{username}
            <if test="queryType != null">
                and type = #{queryType}
            </if>
            <if test="queryStatus != null">
                and status = #{queryStatus}
            </if>
        </where>
        order by clock_time desc
        limit #{index} , #{pageSize}
    </select>

    <select id="countTotal" resultType="Integer">
        select count(*) from attendance
        <where>
            username = #{username}
            <if test="queryType != null">
                and type = #{queryType}
            </if>
            <if test="queryStatus != null">
                and status = #{queryStatus}
            </if>
        </where>
    </select>

    <select id="isClock" resultMap="baseMap">
        select * from attendance where (clock_time between #{todayStartTime} and #{todayEndTime}) and type = #{type} and username = #{username}
    </select>

    <update id="updateApprovalStatus">
        update attendance set is_approval = 1 where username = #{username} and clock_time = #{clockTime}
    </update>

    <select id="queryOne" resultMap="baseMap">
        select * from attendance where username = #{username} and clock_time = #{clockTime} and type = #{type} and status = #{status}
    </select>

    <select id="countCardClock" resultType="Integer">
        select count(*) from attendance
        where username = #{username}
        and (clock_time &gt;= #{time} and clock_time &lt;= #{eTime})
        and status = 1
    </select>

    <select id="countCardReplace" resultType="Integer">
        select count(*) from attendance
        where username = #{username}
        and (clock_time &gt;= #{time} and clock_time &lt;= #{eTime})
        and is_replace = 1
    </select>

    <select id="countCardMissing" resultType="Integer">
        select count(*) from attendance
        where username = #{username}
        and (clock_time &gt;= #{time} and clock_time &lt;= #{eTime})
        and status = 0
    </select>

    <select id="countLate" resultType="Integer">
        select count(*) from attendance
        where username = #{username}
        and (clock_time &gt;= #{time} and clock_time &lt;= #{eTime})
        and status = 2
    </select>

    <select id="countLeaveEarly" resultType="Integer">
        select count(*) from attendance
        where username = #{username}
        and (clock_time &gt;= #{time} and clock_time &lt;= #{eTime})
        and status = 3
    </select>
</mapper>